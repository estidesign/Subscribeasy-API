FORMAT: 1A
HOST: http://test.subscribeasy.com/

# Subscribe API

## URL

Access to Subscribe API is available at https://subscribeasy.com/api/ or at http://subscribeasy.com/api/
HTTPS connection is preferrable
For test purposes use http://test.subscribeasy.com/api/

## Authorization

To authorize in the system you need to provide two parameters:
* 'store_url' URL of the website in the format https://polishtvcompany.com/
* 'key' Secret key. String.
Request above parameters from your manager.
Keep in mind that every request you make should contain this values

## REST API

The only supported method is HTTP POST. Other methods (GET, DELETE, PUT) are not supported.
When making requests please make sure to use content type **application/x-www-form-urlencoded** and url encode all request data

## Required parameters

Every action has it's own list of required parameters. See description of specific API action.
But in general all requests require following parameters: **store_url**, **key**, **action**.

## Action parameter

**action** parameter is a key parameter for specifying what should be performed in Subscribe system.
Every action value correspond to one action in the Subscribe system (e.g. **lead** action create new lead in the system).

## Response
Format of the response is a JSON. Response fields description:

**status**: Can has two possible values: 
* "success" means that request was successfully completed. 
* "fail" means that request was not compleated. For more information look 
at error code and message parameter in the response. 

**message**: Contain description of the API request result or error
description.  

**code**: Code of the request result. It can be an error code or success 
code.  
      

## Lead Collection [/api/?action=leads/]

### List All Leads [POST]

Creates a new `Lead` object.  
Optional query param  **referrer_email** determines the referrer person
who this lead will be assigned to  
Keep in mind than **email** parameter required only in case if 
**telephone** parameter is not provided. The same is actual for 
**telephone** parameter. If **email** is provided, **telephone** is not
required.

+ Response 200

    Successful response.

    + Attributes
        + code: 109 (number)
        + message: Lead was successfully saved (string)
        + type: success (string)
        + leads: (array[Lead for leads list]) - Array of leads
    
+ Response 401

    Invalid credentials. Will occur in case when store_url or key are inavlid

    + Attributes
        + code: 401 (number)
        + message:  Access denied for ...
        + status: fail (string)
        
        

## Create a new lead  [/api/?action=lead]

### New lead [POST]

Creates a new `Lead` object.  
Optional query param  **referrer_email** determines the referrer person
who this lead will be assigned to  
Keep in mind than **email** parameter required only in case if 
**telephone** parameter is not provided. The same is actual for 
**telephone** parameter. If **email** is provided, **telephone** is not
required. The **company_name** field is required only in case if the 
requester (API client) is not linked with any company directly and 
therefore can link lead any existing company.

+ Request

    + Attributes (Lead for create)
        + assignee_email: norma@jean.com - Email of a user which will be assigned to the lead. Should be an email already registered in subscribeasy system
        + referral_source_token: lLE8ntTiZted - Token provided by a subscribe administrator
+ Response 200

    Successful response.

    + Attributes
        + code: 109 (number)
        + message: Lead was successfully saved (string)
        + status: success (string)
        
+ Response 400

    Validation failed. Detailed info will be provided in message property.

    + Attributes
        + code: 400 (number)
        + message: Error description / reason (string)
        + status: fail (string)
        
        
+ Response 401

    Invalid credentials. Will occur in case when store_url or key are inavlid

    + Attributes
        + code: 401 (number)
        + message:  Access denied for ...
        + status: fail (string)
        
        
## Update a lead  [/api/?action=lead/{lead_email_or_phone}]

### Update lead [POST]

Updates a `Lead` object.  

+ Parameters

    + `lead_email_or_phone` - Email/phone number of a lead already existing in Subscribeasy system

+ Request

    + Attributes (Lead)

+ Response 200

    Successfull response. A `Lead` was updated.

    + Attributes
        + code: 119 (number)
        + message: Lead was successfully saved (string)
        + status: success (string)

+ Response 400

    Validation failed. Detailed info will be provided in message property.

    + Attributes
        + code: 400 (number)
        + message: Error description / reason (string)
        + status: fail (string)
        
+ Response 401

    Invalid credentials. Will occur in case when store_url or key are inavlid

    + Attributes
        + code: 401 (number)
        + message:  Access denied for ...
        + status: fail (string)

+ Response 404

    `Lead` corresponding to provided **email** / **phone number** wasn't found

    + Attributes
        + code: 404 (number)
        + message: Provided entity ID is invalid
        + status: fail (string)

        
## Import [/api/?action=import]

### Process payment and create a new order [POST]

Processes payment and creates a new order and other related entities.

+ Request

    + Attributes
        + sync_type: order (required) - System supports 4 types of syncronisation: order, customer, password, referrer.  For processing of payment and creating of an order use **order** value
        + payment (Payment, required) - Payment (Credit card) information
        + products (array[Product], required) - Array of products to process in order
        + customer (Customer, required) - Customer information
        + order (Order, required) - Order, payment and shipping information
        + preprocessed_payment_data (Processed Payment) - Fill this parameter if you need to create an order with already processed payment

+ Response 200

    Successfull response. An `Order` was created

    + Attributes
        + code: 103 (number)
        + message: Order was created successfully (string)
        + status: success (string)

+ Response 401

    Successfull response. An `Order` was created

    + Attributes
        + code: 104 (number)
        + message: Order was not created: reason (string)
        + status: fail (string)

## Validate a credit card  [/api/?action=validate_credit_card]

### Credit card [POST]

Validates a credit card data.  
The **company_name** field is required only in case if the 
requester (API client) is not linked with any company directly and 
therefore can link lead any existing company.

+ Request

    + Attributes (Credit card basics)
        + company_name: polish tv company (required) - Name of the company to associate lead with. Required in case if the requester (API client) is not associated to any company. The field is case insensitive.

+ Response 200

    Successful positive response. Returned when the card is valid.

    + Attributes
        + code: 130 (number)
        + message: Card is valid (string)
        + status: success (string)
        
+ Response 200

    Successful negative response. Takes place when provided card is not valid.

    + Attributes
        + code: 131 (number)
        + message: Reason of validation failure (string)
        + status: success (string)
        
+ Response 400

    Request validation failed. Detailed info will be provided in message property.

    + Attributes
        + code: 400 (number)
        + message: Error description / reason (string)
        + status: fail (string)
        
        
+ Response 401

    Invalid credentials. Will occur in case when `store_url/key` are inavlid or company_name is not provided

    + Attributes
        + code: 401 (number)
        + message:  Access denied for ...
        + status: fail (string)
        
        
## Credit Card [/api/credit_cards/{credit_card_id}]
+ Parameters
    + `credit_card_id` (number) - Id of existing credit card. Can be obtained from `list_credit_card` API

### Update a credit card [POST]

You can update address and state of a card and also disable or enable it. Provide auth information in 
headers **Store_Url** and **Key**. Keep in mind that at least one post paramether should be provided.

+ Request (application/json)

    + Attributes
        + `address_id`: 8 (number) - `address_id` refers to the ID of the 
        address record which can be obtained from `list_address` API.
        + state: enabled (string) - State of a card. Accepts either **enabled** or **disabled** strings.
        If a card is linked to an active autopayment (recurring profile) than it can not be disabled.
        + label: My Visa (string)
        
    + Headers
    
            Key: mzDUac9KpPvRVNHL
            Store-Url: http://test.polskafirmatv.com/
    + Body
        {
            "address_id": 952,
            "state": "disabled",
        }
        

+ Response 200 (application/json)

    + Body

            {
                "data": {
                    "id": 952,
                    "label": "",
                    "card_type": "visa",
                    "number": "xxxxxxxxxxxx4241",
                    "expire_month": "1",
                    "expire_year": "2023",
                    "address_id": null,
                    "state": "disabled"
                },
                "message": "Card was successfully updated",
                "status": "success"
            }
    
+ Response 400 (application/json)

    + Body        
        {
            "status": "fail",
            "code": 400,
            "message": "Field validation failed: Card can not be disabled because it is linked to active AutoPayment profile."
        }


## Check if credit card can be used for trial [/api/?action=check_credit_card_for_trial]

### Credit card [POST]

Checks if credit card can be used for trial.  
The **company_name** field is required only in case if the 
requester (API client) is not linked with any company directly and 
therefore can link lead any existing company.

+ Request

    + Attributes (Credit card number)
        + service_id: 1 (required) - Id of service to check agains
        + company_name: polish tv company (required) - Name of the company to associate lead with. Required in case if the requester (API client) is not associated to any company. The field is case insensitive.

+ Response 200

    Successful positive response. The card wasn't used for trial.

    + Attributes
        + code: 132 (number)
        + message: Card was not used for a trial request (string)
        + status: success (string)

+ Response 200

    Successful negative response. Card was used for trial

    + Attributes
        + code: 133 (number)
        + message: Card was already used for a trial request (string)
        + status: success (string)
        
+ Response 400

    Request validation failed. Detailed info will be provided in message property.

    + Attributes
        + code: 400 (number)
        + message: Error description / reason (string)
        + status: fail (string)
        
        
+ Response 401

    Invalid credentials. Will occur in case when store_url/key are inavlid or company_name is not provided

    + Attributes
        + code: 401 (number)
        + message:  Access denied for ...
        + status: fail (string)

## Create a trial order [/api/?action=trial]

### Trial Order Data [POST]

* Creates a lead if a lead with provided email does not exist in Subscribe.
In case if lead exists and doesn't have status 'Converted' the leads status will be set to 'In trial'
* Creates a customer if a customer with provided email does not exist in Subscribe.
* Creates a new trial order


+ Request

    + Attributes
        + services (array[Sku], required)
        + customer (Customer for trial, required) - Customer information
        + payment (Payment, required) - Payment (Credit card) information
        + company_name: polish tv company (required) - Name of the company to associate lead with. Required in case if the requester (API client) is not associated to any company. The field is case insensitive.

+ Response 200

    Successful positive response. The trial was created.

    + Attributes
        + code: 113 (number)
        + message: Trial subscription #1 was successfully created for new customer with ID #1 in order #1" (string)
        + status: success (string)

+ Response 200

    Negative response. The trial was not created for some reason.

    + Attributes
        + code: 112 (number)
        + message: Trial subscription was not created
        + status: success (string)
        
        
+ Response 401

    Invalid credentials. Will occur in case when store_url/key are inavlid or company_name is not provided

    + Attributes
        + code: 401 (number)
        + message:  Access denied for ...
        + status: fail (string)


## Customer [/api/customers/{customer_email}]
+ Parameters
    + customer_email (email) - Email of an existing customer

### Update a customer [POST]
You can update basic info like **firstname**, 
**lastename**, **email**, **telephone** and **parental password** for subscriptions. 
This action takes a JSON payload as part of the request. Provide auth information in headers **Store_Url** and **Key**
Response then return specific header and body.
Keep in mind that at list one post paramether should be provided.

+ Request (application/json)

    + Headers
    
            Key: mzDUac9KpPvRVNHL
            Store-Url: http://test.polskafirmatv.com/
    + Body
        {
            "email": "oliver@stone.com",
            "firstname": "Oliver",
            "lastname": "Stone"
            "telephone": "9179121000" 
            "parental_password": 2
        }
        
+ Attributes (Customer for update)

+ Response 200 (application/json)

    + Body

            {
                "data": {
                    "firstname": "Oliver",
                    "lastname": "Stone",
                    "email": "oliver@stone.com",
                    "telephone": "9179121000",
                    "telephone2": ""
                },
            "message": "Parental password was updated for all subscriptions",
            "status": "success"
}

## Get customer's payment gateway info [/api/customers/{customer_email}/gateway_info]

+ Parameters
    + customer_email (email) - Email of an existing customer

### Get customer's payment gateway info [GET]
Returns information about payment gateway that should be used when processing paments for this customer.
Response may very depending on gateway type (Stripe, Paypal).
Accuared information may can be used in **import** API for processin of prepaid orders. Provide auth information in headers **Store_Url** and **Key**
Response then return specific header and body.


+ Attributes
    + id: FhfvDIzvHHPchpwg (string) - Id of payment gateway
    + gateway_name: stripe (string)
    + auth_info (array) - Information required for processing of a payment. Contents of this parameter 
may vary depeding on payment gateway

+ Request 
    + Headers
    
            Key: mzDUac9KpPvRVNHL
            Store-Url: http://test.polskafirmatv.com/
            
+ Response 200 (application/json)

    + Body

            {
                "data": {
                    "id": "FhfvDIzvHHPchpwg",
                    "gateway_name": "stripe",
                    "auth_info": {
                        "public_key": "pk_test_dANAk9xwEoG0IXuOOKynNRdv"
                    }
                },
                "status": "success"
            }

## List adresses [/api/?action=list_address]
### List of customer's addresses [POST]

Returns list of addresses that belong to a particular customer

+ Request

    + Attributes
        + Customer
            + email: george@orwell.com (required) - Email of a customer

        
    + Headers
            Store-Url: http://test.polskafirmatv.com/
            Key: mzDUac9KpPvRVNHL
            
            
    + Body
        {
          "customer": {
            "email": "george@orwell.com"
        }

    
+ Response 400
    + Body
        {
            "list_address": [
                {
                    "address_id": 4,
                    "customer_id": 4,
                    "lead_id": null,
                    "company": "",
                    "firstname": "George",
                    "lastname": "Orwell",
                    "address_1": "50 Ave B",
                    "address_2": "",
                    "postcode": "10009",
                    "city": "New York",
                    "country_id": 223,
                    "zone_id": 3655,
                    "user_id": 0,
                    "removable": true,
                    "country": {
                        "country_id": 223,
                        "name": "United States",
                        "iso_code_2": "US"
                    },
                    "zone": {
                        "zone_id": 3655,
                        "name": "New York"
                    }
                }
            ],
            "default_address_id": 4,
            "status": "success"
        }
        
## List credit cards [/api/?action=list_credit_card]
### List of customer's credit cards [POST]

Returns list of cards that belong to a particular customer

+ Request

    + Attributes
        + Customer
            + email: george@orwell.com (required) - Email of a customer

        
    + Headers
            Store-Url: http://test.polskafirmatv.com/
            Key: mzDUac9KpPvRVNHL
            
            
    + Body
        {
          "customer": {
            "email": "george@orwell.com"
        }

    
+ Response 400
    + Body
        {
            "cc_list": [
                {
                    "id": 767,
                    "number": "xxxxxxxxxxxx9221",
                    "card_type": "visa",
                    "expire_month": "3",
                    "expire_year": "2021",
                    "address_id": null
                }
            ],
            "status": "success"
        }
        



# Data Structures

## Lead (object)
+ firstname: John  - Firstname of a lead. Accepts letters, whitespaces, dashes and apostrophes. Max length is 124 symbols.
+ lastname: Doe - Lastname of a lead. Accepts letters, whitespaces, dashes and apostrophes. Max length is 124 symbols.
+ email: john@doe.com 
+ telephone: 9179123000 - From 10 to 12 digits

## Lead for leads list (Lead)
+ id: 1 (number) - Id of lead
+ date_added: `2015-01-01` (string) - Date of lead creation

## Lead for create (Lead)
+ firstname: John (required) - Firstname of a lead. Accepts letters, whitespaces, dashes and apostrophes. Max length is 124 symbols.
+ lastname: Doe (required) - Lastname of a lead. Accepts letters, whitespaces, dashes and apostrophes. Max length is 124 symbols.
+ email: john@doe.com (required)
+ telephone: 9179123000 (required) - From 10 to 12 digits
+ company_name: polish tv company (required) - Name of the company to associate lead with. Required in case if the requester (API client) is not associated to any company. The field is case insensitive.

## Referral
+ type_id: 10 (number, required) - Id of referral type
+ name: norma@jean.com (string) - Identifier of referral. Can be name, email or url. With referral_type_id = 10 use email of a referral sales person

## Credit card number (object)
+ `card_number`: `Kw3JZlXwcmJNfmRdRnHfEuDAOQKWtXbg50IvtJuNASsDgsO2ZWpVNi5fhG9A6NOSoy98NSozlICnCUS3WqWOjw==` (string, required) - Credit card number encrypted with a public key and then base 64 encoded. You can use openssl_public_encrypt and base64_encode PHP functions. Please take in account than request should be url ecnoded.

## Credit card basics (Credit card number)
+ firstname:  Bruce (string, required) - Firstname of a cardholder
+ lastname: Wayne (string, required) - Lastname of a cardholder
+ expiration_month: 07 (number, required) - Expiration month
+ expiration_year: 2020 (number, required) - Expiration year
+ cvv: 777 (number, required) - CVV number


## Payment
+ payment_firstname:  Bruce (string, required) - Firstname of a cardholder
+ payment_lastname: Wayne (string, required) - Lastname of a cardholder
+ creditCardType: visa (string, required) - Can have one of the following values: visa, discover, mastercard, amex
+ creditCardNumber: `Kw3JZlXwcmJNfmRdRnHfEuDAOQKWtXbg50IvtJuNASsDgsO2ZWpVNi5fhG9A6NOSoy98NSozlICnCUS3WqWOjw==` (string, required) - Credit card number encrypted with a public key and then base 64 encoded. You can use openssl_public_encrypt and base64_encode PHP functions. Please take in account than request should be url ecnoded.
+ expDateMonth: 07 (number, required) - Expiration month
+ expDateYear: 2020 (number, required) - Expiration year
+ cvv2Number: 777 (number, required) - CVV number



## Processed Payment
- gateway_id: `vQqBqFmpq8KJlIMJ` (string, required) - ID of gateway that processed payment
- charge_id: `ch1AaGNcEuNAfWj71itfGbkcia` (string, required) - ID of charge (transaction ID) obtained from payment gateway



## Product
+ sku: `IPTV:SERVICES:PREMIUM:PremiumMonthly` (string, required) - SKU of a product
+ price: 29.99 (number, required) - Proudct price

## Sku
+ sku: `IPTV:SERVICES:PolishTV:PolishTrial` (string, required) - SKU of a product


## Address
+ firstname (required)
+ lastname (required)
+ company - Company name
+ address_1 (required)
+ address_2
+ city (required)
+ postcode (required) - Zip code of an address
+ zone: Alabama (required) - Full state name
+ country (required) -  2 letter country code. A2 ISO standart

## Customer
+ account_firstname: Olivia (required)
+ account_lastname: Wilde (required)
+ email: olivia@wilde.com (required)
+ phone: 7854087499
+ referral: `Internet:google.com` - Referral in format Medium:SourceName.
+ addresses (array[Address]) - List of address object which are associated to a customer object


## Customer for update
+ firstname: Olivia
+ lastname: Wilde
+ email: olivia@wilde.com
+ telephone: 7854087499
+ parentall_password: 7 - Password that will be assigned to customer's subscriptions


## Customer for trial (Customer)
+ password_hash (required)

## Order
+ order_id: 1 (number) - Number of the order in your system
+ payment_company - Name of company
+ payment_address_1: 421 W 54th St (required) - Payment address
+ payment_address_2
+ payment_city: New York (required) - Payment city
+ payment_zone: New York (required) - Full state name
+ payment_country: US (required) - 2 letter country code. A2 ISO standart
+ payment_postcode: 10019 (required) - Zip code of an address
+ has_shipping: 0 (number, required) - Defines if the order should be shipped. Use 0 or 1 values
+ shipping_company
+ shipping_address_1 - Shipping address
+ shipping_address_2 -
+ shipping_city - Shipping city
+ shipping_zone - Full state name
+ shipping_country - 2 letter country code. A2 ISO standart
+ shipping_postcode - Zip code of an address